// Copyright 2018-2024 the oak authors. All rights reserved. MIT license.
import "../node_shims.ts";
/** Guard for Async Iterables */ export function isAsyncIterable(value) {
  return typeof value === "object" && value !== null && Symbol.asyncIterator in value && // deno-lint-ignore no-explicit-any
  typeof value[Symbol.asyncIterator] === "function";
}
export function isBun() {
  return "Bun" in globalThis;
}
/** Determines if a string "looks" like HTML */ export function isHtml(value) {
  return /^\s*<(?:!DOCTYPE|html|body)/i.test(value);
}
export function isListenTlsOptions(value) {
  return typeof value === "object" && value !== null && ("cert" in value || "certFile" in value) && ("key" in value || "keyFile" in value) && "port" in value;
}
export function isNetAddr(value) {
  return typeof value === "object" && value != null && "transport" in value && "hostname" in value && "port" in value;
}
export function isNode() {
  return "process" in globalThis && "global" in globalThis && !("Bun" in globalThis) && !("WebSocketPair" in globalThis);
}
/** Guard for `Deno.Reader`. */ export function isReader(value) {
  return typeof value === "object" && value !== null && "read" in value && typeof value.read === "function";
}
export function isRouterContext(value) {
  return "params" in value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vanNyLmlvL0BvYWsvb2FrLzE2LjEuMC91dGlscy90eXBlX2d1YXJkcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDI0IHRoZSBvYWsgYXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gTUlUIGxpY2Vuc2UuXG5cbmltcG9ydCB0eXBlIHsgU3RhdGUgfSBmcm9tIFwiLi4vYXBwbGljYXRpb24udHNcIjtcbmltcG9ydCB0eXBlIHsgQ29udGV4dCB9IGZyb20gXCIuLi9jb250ZXh0LnRzXCI7XG5pbXBvcnQgdHlwZSB7IFJvdXRlUGFyYW1zLCBSb3V0ZXJDb250ZXh0IH0gZnJvbSBcIi4uL3JvdXRlci50c1wiO1xuaW1wb3J0IHR5cGUgeyBOZXRBZGRyIH0gZnJvbSBcIi4uL3R5cGVzLnRzXCI7XG5cbmltcG9ydCBcIi4uL25vZGVfc2hpbXMudHNcIjtcblxuLyoqIEd1YXJkIGZvciBBc3luYyBJdGVyYWJsZXMgKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0FzeW5jSXRlcmFibGUoXG4gIHZhbHVlOiB1bmtub3duLFxuKTogdmFsdWUgaXMgQXN5bmNJdGVyYWJsZTx1bmtub3duPiB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUgIT09IG51bGwgJiZcbiAgICBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiB2YWx1ZSAmJlxuICAgIC8vIGRlbm8tbGludC1pZ25vcmUgbm8tZXhwbGljaXQtYW55XG4gICAgdHlwZW9mICh2YWx1ZSBhcyBhbnkpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9PT0gXCJmdW5jdGlvblwiO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNCdW4oKTogYm9vbGVhbiB7XG4gIHJldHVybiBcIkJ1blwiIGluIGdsb2JhbFRoaXM7XG59XG5cbi8qKiBEZXRlcm1pbmVzIGlmIGEgc3RyaW5nIFwibG9va3NcIiBsaWtlIEhUTUwgKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0h0bWwodmFsdWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gL15cXHMqPCg/OiFET0NUWVBFfGh0bWx8Ym9keSkvaS50ZXN0KHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTGlzdGVuVGxzT3B0aW9ucyhcbiAgdmFsdWU6IHVua25vd24sXG4pOiB2YWx1ZSBpcyBEZW5vLkxpc3RlblRsc09wdGlvbnMge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmIHZhbHVlICE9PSBudWxsICYmXG4gICAgKFwiY2VydFwiIGluIHZhbHVlIHx8IFwiY2VydEZpbGVcIiBpbiB2YWx1ZSkgJiZcbiAgICAoXCJrZXlcIiBpbiB2YWx1ZSB8fCBcImtleUZpbGVcIiBpbiB2YWx1ZSkgJiYgXCJwb3J0XCIgaW4gdmFsdWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc05ldEFkZHIodmFsdWU6IHVua25vd24pOiB2YWx1ZSBpcyBOZXRBZGRyIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiB2YWx1ZSAhPSBudWxsICYmIFwidHJhbnNwb3J0XCIgaW4gdmFsdWUgJiZcbiAgICBcImhvc3RuYW1lXCIgaW4gdmFsdWUgJiYgXCJwb3J0XCIgaW4gdmFsdWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc05vZGUoKTogYm9vbGVhbiB7XG4gIHJldHVybiBcInByb2Nlc3NcIiBpbiBnbG9iYWxUaGlzICYmIFwiZ2xvYmFsXCIgaW4gZ2xvYmFsVGhpcyAmJlxuICAgICEoXCJCdW5cIiBpbiBnbG9iYWxUaGlzKSAmJiAhKFwiV2ViU29ja2V0UGFpclwiIGluIGdsb2JhbFRoaXMpO1xufVxuXG4vKiogR3VhcmQgZm9yIGBEZW5vLlJlYWRlcmAuICovXG5leHBvcnQgZnVuY3Rpb24gaXNSZWFkZXIodmFsdWU6IHVua25vd24pOiB2YWx1ZSBpcyBEZW5vLlJlYWRlciB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiYgdmFsdWUgIT09IG51bGwgJiYgXCJyZWFkXCIgaW4gdmFsdWUgJiZcbiAgICB0eXBlb2YgKHZhbHVlIGFzIFJlY29yZDxzdHJpbmcsIHVua25vd24+KS5yZWFkID09PSBcImZ1bmN0aW9uXCI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1JvdXRlckNvbnRleHQ8XG4gIFIgZXh0ZW5kcyBzdHJpbmcsXG4gIFAgZXh0ZW5kcyBSb3V0ZVBhcmFtczxSPixcbiAgUyBleHRlbmRzIFN0YXRlLFxuPihcbiAgdmFsdWU6IENvbnRleHQ8Uz4sXG4pOiB2YWx1ZSBpcyBSb3V0ZXJDb250ZXh0PFIsIFAsIFM+IHtcbiAgcmV0dXJuIFwicGFyYW1zXCIgaW4gdmFsdWU7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseUVBQXlFO0FBT3pFLE9BQU8sbUJBQW1CO0FBRTFCLDhCQUE4QixHQUM5QixPQUFPLFNBQVMsZ0JBQ2QsS0FBYztFQUVkLE9BQU8sT0FBTyxVQUFVLFlBQVksVUFBVSxRQUM1QyxPQUFPLGFBQWEsSUFBSSxTQUN4QixtQ0FBbUM7RUFDbkMsT0FBTyxBQUFDLEtBQWEsQ0FBQyxPQUFPLGFBQWEsQ0FBQyxLQUFLO0FBQ3BEO0FBRUEsT0FBTyxTQUFTO0VBQ2QsT0FBTyxTQUFTO0FBQ2xCO0FBRUEsNkNBQTZDLEdBQzdDLE9BQU8sU0FBUyxPQUFPLEtBQWE7RUFDbEMsT0FBTywrQkFBK0IsSUFBSSxDQUFDO0FBQzdDO0FBRUEsT0FBTyxTQUFTLG1CQUNkLEtBQWM7RUFFZCxPQUFPLE9BQU8sVUFBVSxZQUFZLFVBQVUsUUFDNUMsQ0FBQyxVQUFVLFNBQVMsY0FBYyxLQUFLLEtBQ3ZDLENBQUMsU0FBUyxTQUFTLGFBQWEsS0FBSyxLQUFLLFVBQVU7QUFDeEQ7QUFFQSxPQUFPLFNBQVMsVUFBVSxLQUFjO0VBQ3RDLE9BQU8sT0FBTyxVQUFVLFlBQVksU0FBUyxRQUFRLGVBQWUsU0FDbEUsY0FBYyxTQUFTLFVBQVU7QUFDckM7QUFFQSxPQUFPLFNBQVM7RUFDZCxPQUFPLGFBQWEsY0FBYyxZQUFZLGNBQzVDLENBQUMsQ0FBQyxTQUFTLFVBQVUsS0FBSyxDQUFDLENBQUMsbUJBQW1CLFVBQVU7QUFDN0Q7QUFFQSw2QkFBNkIsR0FDN0IsT0FBTyxTQUFTLFNBQVMsS0FBYztFQUNyQyxPQUFPLE9BQU8sVUFBVSxZQUFZLFVBQVUsUUFBUSxVQUFVLFNBQzlELE9BQU8sQUFBQyxNQUFrQyxJQUFJLEtBQUs7QUFDdkQ7QUFFQSxPQUFPLFNBQVMsZ0JBS2QsS0FBaUI7RUFFakIsT0FBTyxZQUFZO0FBQ3JCIn0=